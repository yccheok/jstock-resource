<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0062)http://www.ibm.com/developerworks/java/library/j-jtp02244.html -->
<HTML xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><HEAD><META http-equiv="Content-Type" content="text/html; charset=UTF-8"><TITLE>Java theory and practice: Fixing the Java Memory Model, Part 1</TITLE><META http-equiv="PICS-Label" content="(PICS-1.1 &quot;http://www.icra.org/ratingsv02.html&quot; l gen true r (cz 1 lz 1 nz 1 oz 1 vz 1) &quot;http://www.rsac.org/ratingsv01.html&quot; l gen true r (n 0 s 0 v 0 l 0) &quot;http://www.classify.org/safesurf/&quot; l gen true r (SS~~000 1))">
<LINK rel="schema.DC" href="http://purl.org/DC/elements/1.0/">
<LINK rel="SHORTCUT ICON" href="http://www.ibm.com/favicon.ico">
<META name="Owner" content="dW Information/Raleigh/IBM">
<META name="DC.Language" scheme="rfc1766" content="en">
<META name="IBM.Country" content="ZZ">
<META name="Security" content="Public">
<META name="IBM.SpecialPurpose" content="SP001">
<META name="IBM.PageAttributes" content="sid=1003">
<META name="Source" content="Based on v15 Template Generator, Template 15"><META name="Abstract" content="JSR 133, which has been active for nearly three years, has recently issued its public recommendation on what to do about the Java Memory Model (JMM). Several serious flaws were found in the original JMM, resulting in some surprisingly difficult semantics for concepts that were supposed to be simple, like volatile, final, and synchronized. In this installment of Java theory and practice, Brian Goetz shows how the semantics of volatile and final will be strengthened in order to fix the JMM. Some of these changes have already been integrated in JDK 1.4; others are slated for inclusion in JDK 1.5."><META name="Description" content="JSR 133, which has been active for nearly three years, has recently issued its public recommendation on what to do about the Java Memory Model (JMM). Several serious flaws were found in the original JMM, resulting in some surprisingly difficult semantics for concepts that were supposed to be simple, like volatile, final, and synchronized. In this installment of Java theory and practice, Brian Goetz shows how the semantics of volatile and final will be strengthened in order to fix the JMM. Some of these changes have already been integrated in JDK 1.4; others are slated for inclusion in JDK 1.5."><META name="Keywords" content="JSR 133, Java Memory Model, JMM, reordering, cache, synchronized, synchronization, volatile, final, immutable, Brian Goetz, Java Theory and Practice, tttjca"><META name="DC.Date" scheme="iso8601" content="2004-02-24"><META name="DC.Type" scheme="IBM_ContentClassTaxonomy" content="CT316"><META name="DC.Subject" scheme="IBM_SubjectTaxonomy" content="TT300"><META name="DC.Rights" content="Copyright (c) 2004 by IBM Corporation"> <META name="Robots" content="index,follow"><META name="IBM.Effective" scheme="W3CDTF" content="2004-02-24"><META name="Last update" content="04102008mwfergus@us.ibm.com"><!-- STYLESHEETS/SCRIPTS -->
<!-- for tables -->
<LINK rel="stylesheet" type="text/css" media="screen,print" href="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/table.css"> 
<!-- end for tables -->
<SCRIPT language="JavaScript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/dwcss14.js" type="text/javascript"></SCRIPT><LINK rel="stylesheet" href="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/r1v14.css" type="text/css">
<LINK rel="stylesheet" type="text/css" href="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/main.css">
<LINK rel="stylesheet" type="text/css" media="all" href="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/screen.css">
<LINK rel="stylesheet" type="text/css" media="print" href="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/print.css">
<SCRIPT language="JavaScript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/detection.js" type="text/javascript"></SCRIPT>
<SCRIPT language="JavaScript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/ibmcommon.js" type="text/javascript">//</SCRIPT><LINK rel="search" type="application/opensearchdescription+xml" href="http://www.ibm.com/search/opensearch/description.xml" title="IBM Search">
<SCRIPT language="JavaScript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/dynamicnav.js" type="text/javascript">//</SCRIPT>
<SCRIPT language="JavaScript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/dropdown.js" type="text/javascript"></SCRIPT>
<SCRIPT language="JavaScript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/grabtitle.js" type="text/javascript"></SCRIPT>
<SCRIPT language="JavaScript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/emailfriend2.js" type="text/javascript"></SCRIPT><SCRIPT language="JavaScript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/urltactic.js" type="text/javascript"></SCRIPT><SCRIPT language="JavaScript" type="text/javascript">
 <!--
 setDefaultQuery('javaart');
 //-->
</SCRIPT>
<!--START RESERVED FOR FUTURE USE INCLUDE FILES--><SCRIPT language="javascript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/ajax1.js" type="text/javascript"></SCRIPT><SCRIPT language="javascript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/search_counter.js" type="text/javascript"></SCRIPT><SCRIPT language="javascript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/request_referer_capture.js" type="text/javascript"></SCRIPT><SCRIPT language="javascript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/summaries_switcher.js" type="text/javascript"></SCRIPT><!--END RESERVED FOR FUTURE USE INCLUDE FILES--><SCRIPT language="JavaScript" type="text/javascript">var emailAbstract = "JSR 133, which has been active for nearly three years, has recently issued its public recommendation on what to do about the Java Memory Model (JMM). Several serious flaws were found in the original JMM, resulting in some surprisingly difficult semantics for concepts that were supposed to be simple, like volatile, final, and synchronized. In this installment of Java theory and practice, Brian Goetz shows how the semantics of volatile and final will be strengthened in order to fix the JMM. Some of these changes have already been integrated in JDK 1.4; others are slated for inclusion in JDK 1.5."; </SCRIPT><SCRIPT id="mhMenu" type="text/javascript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/usen-utf8.js" charset="UTF-8"></SCRIPT><SCRIPT id="dynavEA" type="text/javascript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/Controller" charset="UTF-8"></SCRIPT><SCRIPT id="wiBundle" type="text/javascript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/Controller(1)" charset="UTF-8"></SCRIPT></HEAD><BODY><!--MASTHEAD_BEGIN--><DIV id="ibm-top" class="ibm-liquid">
<DIV class="ibm-access"><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#main">Skip to main content</A></DIV>

<DIV id="ibm-masthead">
<DIV id="ibm-logo"><A href="http://www.ibm.com/"><IMG width="110" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/ibm-logo.gif" height="50" alt="IBM&reg;"></A></DIV>

<UL id="ibm-geo">
<LI class="ibm-first" id="ibm-country">Country/region</LI>
<LI id="ibm-change-country">[ <A href="http://www.ibm.com/developerworks/country/">select</A> ]</LI>
</UL>

<FORM id="ibm-search-form" action="http://www.ibm.com/developerworks/search/searchResults.jsp" method="get" name="form1"><INPUT type="hidden" name="searchType" value="1"><INPUT type="hidden" name="searchSite" value="dW"><P>
<SPAN id="ibm-search-scope">
<LABEL for="sn"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" width="1" height="1" alt="Search in:"></LABEL>
<SELECT class="input-local" name="searchScope" id="sn" size="1">
<OPTION value="dW" selected="selected">All of dW</OPTION>
<OPTION value="dW">-----------------</OPTION>
<OPTION value="aixunix">&nbsp;&nbsp;AIX and UNIX</OPTION>
<OPTION value="db2">&nbsp;&nbsp;Information Mgmt</OPTION>
<OPTION value="lotus">&nbsp;&nbsp;Lotus</OPTION>
<OPTION value="rdd">&nbsp;&nbsp;Rational</OPTION>
<OPTION value="tivoli">&nbsp;&nbsp;Tivoli</OPTION>  
<OPTION value="WSDD">&nbsp;&nbsp;WebSphere</OPTION>
<OPTION value="dW">-----------------</OPTION> 
<OPTION value="archZ">&nbsp;&nbsp;Architecture</OPTION>
<OPTION value="acZ">&nbsp;&nbsp;Autonomic computing</OPTION>
<OPTION value="javaZ">&nbsp;&nbsp;Java technology</OPTION> 
<OPTION value="linuxZ">&nbsp;&nbsp;Linux</OPTION> 
<OPTION value="paZ">&nbsp;&nbsp;Multicore acceleration</OPTION>
<OPTION value="opensrcZ">&nbsp;&nbsp;Open source</OPTION>
<OPTION value="webservZ">&nbsp;&nbsp;SOA &amp; Web services</OPTION>
<OPTION value="webarchZ">&nbsp;&nbsp;Web development</OPTION>  
<OPTION value="xmlZ">&nbsp;&nbsp;XML</OPTION>
<OPTION value="dW">-----------------</OPTION>
<OPTION value="forums">&nbsp;&nbsp;dW forums</OPTION> 
<OPTION value="dW">-----------------</OPTION>
<OPTION value="aW">alphaWorks</OPTION>
<OPTION value="dW">-----------------</OPTION>
<OPTION value="all">All of IBM</OPTION>
</SELECT>
</SPAN>

<LABEL for="q"><IMG alt="Search for:" height="1" width="1" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></LABEL><INPUT type="text" name="query" maxlength="100" id="q"><INPUT type="submit" id="ibm-search" class="ibm-btn-search" name="Search" value="Search"></P></FORM>

<DIV id="ibm-site-name">
<!-- IBM site name container -->
</DIV>

<DIV id="ibm-universal-nav">
<UL>
<LI class="ibm-first" id="ibm-unav-home"><A href="http://www.ibm.com/us/en/">Home</A></LI>
<LI id="ibm-unav-solutions"><A href="http://www.ibm.com/solutions/us/en/" class=" ibm-unav-has-child">Solutions</A><DIV class="ibm-unav-menu" id="gi-1d6b5198"><SPAN class="ibm-unav-menu-ehb" id="gi-1d6b5198-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI class=" ibm-place-holder"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-d562ca8f-trigger">By industry</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-d562ca8f"><SPAN class="ibm-unav-menu-ehb" id="gi-d562ca8f-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/industries/aerodefense/?cm_re=masthead-_-business-_-ind-aerodef">Aerospace and defense</A></LI><LI><A href="http://www.ibm.com/industries/automotive/?cm_re=masthead-_-business-_-ind-auto">Automotive</A></LI><LI><A href="http://www.ibm.com/industries/financialservices/banking/?cm_re=masthead-_-business-_-ind-banking">Banking</A></LI><LI><A href="http://www.ibm.com/industries/chemicalspetroleum/?cm_re=masthead-_-business-_-ind-chem">Chemicals and petroleum</A></LI><LI><A href="http://www.ibm.com/industries/consumerproducts/?cm_re=masthead-_-business-_-ind-consumer">Consumer products</A></LI><LI><A href="http://www.ibm.com/industries/education/?cm_re=masthead-_-business-_-ind-edu">Education</A></LI><LI><A href="http://www.ibm.com/industries/electronics/?cm_re=masthead-_-business-_-ind-elec">Electronics</A></LI><LI><A href="http://www.ibm.com/industries/utilities/?cm_re=masthead-_-business-_-ind-energy">Energy and utilities</A></LI><LI><A href="http://www.ibm.com/industries/financialservices/financialmarkets/?cm_re=masthead-_-business-_-ind-finance">Financial markets</A></LI><LI><A href="http://www.ibm.com/industries/government/?cm_re=masthead-_-business-_-ind-gov">Government</A></LI><LI><A href="http://www.ibm.com/industries/healthcare/?cm_re=masthead-_-business-_-ind-health">Healthcare and life sciences</A></LI><LI><A href="http://www.ibm.com/industries/industrialproducts/index.jsp?cm_re=masthead-_-business-_-ind-ind_prods">Industrial products</A></LI><LI><A href="http://www.ibm.com/industries/financialservices/insurance/?cm_re=masthead-_-business-_-ind-ins">Insurance</A></LI><LI><A href="http://www.ibm.com/industries/media/?cm_re=masthead-_-business-_-ind-media">Media and entertainment</A></LI><LI><A href="http://www.ibm.com/industries/retail/?cm_re=masthead-_-business-_-ind-retail">Retail</A></LI><LI><A href="http://www.ibm.com/industries/telecom/?cm_re=masthead-_-business-_-ind-tele">Telecommunications</A></LI><LI><A href="http://www.ibm.com/industries/travel/?cm_re=masthead-_-business-_-ind-travel">Travel and transportation</A></LI><LI><A href="http://www.ibm.com/wholesaledistribution/?cm_re=masthead-_-business-_-ind-wholesale">Wholesale distribution</A></LI><LI><A href="http://www.ibm.com/businesscenter/smb/us/en/industries?cm_re=masthead-_-business-_-ind-medbus">Medium business industries</A></LI></UL></DIV></LI><LI class=" ibm-place-holder"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-7e9f06ac-trigger">By business need</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-7e9f06ac"><SPAN class="ibm-unav-menu-ehb" id="gi-7e9f06ac-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/software/data/db2bi/?cm_re=masthead-_-business-_-bzn-busint">Business intelligence</A></LI><LI><A href="http://www.ibm.com/services/crm/?cm_re=masthead-_-business-_-bzn-crm">Customer relationship management</A></LI><LI><A href="http://www.ibm.com/solutions/erp/?cm_re=masthead-_-business-_-bzn-erp">Enterprise resource planning</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_financialmgmt.html?re=bcs_home&cm_re=masthead-_-business-_-bzn-finmgmt">Financial management</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_humancapitalmgmt.html?re=bcs_home&cm_re=masthead-_-business-_-bzn-humancap">Human capital management</A></LI><LI><A href="http://www.ibm.com/software/plm/?cm_re=masthead-_-business-_-bzn-plm">Product lifecycle management</A></LI><LI><A href="http://www.ibm.com/security/index.shtml?cm_re=masthead-_-business-_-bzn-sec">Security</A></LI><LI><A href="http://www.ibm.com/solutions/businesssolutions/sensors/index.jsp?cm_re=masthead-_-business-_-bzn-sensors">Sensors and actuators</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_strategyplanning.html?re=bcs_home&cm_re=masthead-_-business-_-bzn-strat">Strategy and change</A></LI><LI><A href="http://www.ibm.com/services/scm/?cm_re=masthead-_-business-_-bzn-scm">Supply chain management</A></LI></UL></DIV></LI><LI class=" ibm-place-holder"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-2c77fb70-trigger">By IT issue</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-2c77fb70"><SPAN class="ibm-unav-menu-ehb" id="gi-2c77fb70-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/itsolutions/business-process-management/?cm_re=masthead-_-business-_-bzn-bpm">Business process management</A></LI><LI><A href="http://www.ibm.com/itsolutions/collaboration/?cm_re=masthead-_-business-_-bzn-collab">Collaboration</A></LI><LI><A href="http://www.ibm.com/itsolutions/content-management//?cm_re=masthead-_-business-_-bzn-content">Content management</A></LI><LI><A href="http://www.ibm.com/itsolutions/it-cost/?cm_re=masthead-_-business-_-bzn-cost">Cost management</A></LI><LI><A href="http://www.ibm.com/itsolutions/data/?cm_re=masthead-_-business-_-bzn-data">Data management</A></LI><LI><A href="http://www.ibm.com/itsolutions/disaster-recovery/?cm_re=masthead-_-business-_-bzn-recovery">Disaster recovery</A></LI><LI><A href="http://www.ibm.com/itsolutions/distribution-management/?cm_re=masthead-_-business-_-bzn-disman">Distribution management</A></LI><LI><A href="http://www.ibm.com/itsolutions/energy-efficiency/?cm_re=masthead-_-business-_-bzn-energy">Energy efficiency</A></LI><LI><A href="http://www.ibm.com/itsolutions/eai/?cm_re=masthead-_-business-_-bzn-eai">Enterprise application integration</A></LI><LI><A href="http://www.ibm.com/itsolutions/enterprisearchitecture/">Enterprise architecture</A></LI><LI><A href="http://www.ibm.com/itsolutions/compliance/?cm_re=masthead-_-business-_-bzn-compliance">Regulatory compliance</A></LI><LI><A href="http://www.ibm.com/security?cm_re=masthead-_-business-_-bzn-security">Security</A></LI><LI><A href="http://www.ibm.com/itsolutions/systems-management/?cm_re=masthead-_-business-_-bzn-sysman">Systems management</A></LI><LI><A href="http://www.ibm.com/itsolutions/virtualization/?cm_re=masthead-_-business-_-bzn-virtual">Virtualization</A></LI><LI><A href="http://www.ibm.com/itsolutions/portals/?cm_re=masthead-_-business-_-bzn-wrkforce">Workforce productivity</A></LI></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-be783efb-trigger">By top Business Partner</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-be783efb"><SPAN class="ibm-unav-menu-ehb" id="gi-be783efb-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/solutions/cisco/?cm_re=masthead-_-business-_-bp-cisco">IBM and Cisco</A></LI><LI><A href="http://www.ibm.com/solutions/businesssolutions/oracle/?cm_re=masthead-_-business-_-bp-oracle">IBM and Oracle</A></LI><LI><A href="http://www.ibm.com/solutions/sap/?cm_re=masthead-_-business-_-bp-sap">IBM and SAP</A></LI><LI><A href="http://www.ibm.com/solutions/businesssolutions/">More alliance partners</A></LI></UL></DIV></LI><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_index.html?cm_re=masthead-_-business-_-busconsult">Business consulting</A></LI><LI><A href="http://www.ibm.com/financing/us/?cm_re=masthead-_-business-_-financing">Financing</A></LI><LI class=" ibm-mhdyn-rule"><A href="http://www.ibm.com/soa?pgel=ibmhzn&cm_re=masthead-_-business-_-soa" id="gi-e7a2f60-trigger">Service oriented architecture (SOA)</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-e7a2f60"><SPAN class="ibm-unav-menu-ehb" id="gi-e7a2f60-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI><A href="http://www.ibm.com/businesscenter/smallbusiness/us/en?cm_re=masthead-_-business-_-sol4sb">Small business solutions</A></LI><LI class=" ibm-mhdyn-rule"><A href="http://www.ibm.com/businesscenter/smb/us/en/solutionareas?cm_re=masthead-_-business-_-sol4mb" id="gi-f1156837-trigger">Medium business solutions</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-f1156837"><SPAN class="ibm-unav-menu-ehb" id="gi-f1156837-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI><A href="http://www.ibm.com/businesssolutions/us/en/?cm_re=masthead-_-business-_-more">More</A></LI></UL></DIV></LI>
<LI id="ibm-unav-services"><A href="http://www.ibm.com/technologyservices/us/en/" class=" ibm-unav-has-child">Services</A><DIV class="ibm-unav-menu" id="gi-abcb99eb"><SPAN class="ibm-unav-menu-ehb" id="gi-abcb99eb-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI class=" ibm-mhdyn-rule"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-1ec96e90-trigger">IT services</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-1ec96e90"><SPAN class="ibm-unav-menu-ehb" id="gi-1ec96e90-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/services/us/index.wss">All IT services</A></LI><LI><A href="http://www.ibm.com/services/continuity/?cm_re=masthead-_-itservices-_-buscont">Business continuity and resiliency services</A></LI><LI><A href="http://www.ibm.com/services/enduser/?cm_re=masthead-_-itservices-_-enduser">End-user services</A></LI><LI><A href="http://www.ibm.com/services/integratedcommunications/?cm_re=masthead-_-itservices-_-communications">Integrated communications services</A></LI><LI><A href="http://www.ibm.com/services/itsaconsulting/?cm_re=masthead-_-itservices-_-strategy">IT strategy and architecture services</A></LI><LI><A href="http://www.ibm.com/services/maintenance/?cm_re=masthead-_-itservices-_-maint">Maintenance and technical support services</A></LI><LI><A href="http://www.ibm.com/services/middleware/?cm_re=masthead-_-itservices-_-middleware">Middleware services</A></LI><LI><A href="http://www.ibm.com/services/security/?cm_re=masthead-_-itservices-_-security">Security and privacy services</A></LI><LI><A href="http://www.ibm.com/services/server/?cm_re=masthead-_-itservices-_-server">Server services</A></LI><LI><A href="http://www.ibm.com/services/siteandfacilities/?cm_re=masthead-_-itservices-_-site">Site and facilities services</A></LI><LI><A href="http://www.ibm.com/services/storage/?cm_re=masthead-_-itservices-_-storage">Storage and data services</A></LI><LI><A href="http://www.ibm.com/services/us/index.wss/allservices">IT services A-Z</A></LI></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-4e80896c-trigger">Business consulting</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-4e80896c"><SPAN class="ibm-unav-menu-ehb" id="gi-4e80896c-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_index.html?cm_re=masthead-_-itservices-_-busconsult">All business consulting</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_salesmrktingservices.html?re=bcs_home">Customer relationship management</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_financialmgmt.html?re=bcs_home">Financial management</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_humancapitalmgmt.html?re=bcs_home">Human capital management</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_strategyplanning.html?re=bcs_home">Strategy and change</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/bus/html/bcs_supplychainprocurement.html?re=bcs_home">Supply chain management</A></LI></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-dbdd1793-trigger">Application services</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-dbdd1793"><SPAN class="ibm-unav-menu-ehb" id="gi-dbdd1793-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/services/applications?cm_re=masthead-_-business-_-apps-allappserv">All application services</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/app/html/gbs_app_custom_appdev_sysinteg.html?cm_re=masthead-_-business-_-apps-appdev">Custom application development and system integration</A></LI><LI><A href="http://www.ibm.com/services/us/gbs/app/html/gbs_app_appmanagement.html?cm_re=masthead-_-business-_-apps-appmgmt">Application management</A></LI></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-f0881857-trigger">Outsourcing services</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-f0881857"><SPAN class="ibm-unav-menu-ehb" id="gi-f0881857-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/services/us/index.wss/offerfamily/aod/a1028600">Applications outsourcing</A></LI><LI><A href="http://www.ibm.com/services/us/index.wss/itservice/igs/a1026220">Business process outsourcing</A></LI><LI><A href="http://www.ibm.com/services/us/index.wss/itservice/so/a1000414">IT outsourcing and hosting</A></LI></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="http://www.ibm.com/training" id="gi-cee3bdf7-trigger">Training</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-cee3bdf7"><SPAN class="ibm-unav-menu-ehb" id="gi-cee3bdf7-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI><A href="http://www.ibm.com/businesscenter/smallbusiness/us/en/service?cm_re=masthead-_-itservices-_-smallbus">Small business services</A></LI><LI class=" ibm-mhdyn-rule"><A href="http://www.ibm.com/businesscenter/smb/us/en/service?cm_re=masthead-_-itservices-_-medbus" id="gi-34274794-trigger">Medium business services</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-34274794"><SPAN class="ibm-unav-menu-ehb" id="gi-34274794-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-ad71be6b-trigger">Other services</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-ad71be6b"><SPAN class="ibm-unav-menu-ehb" id="gi-ad71be6b-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/financing/us/recovery/?cm_re=masthead-_-itservices-_-asset">Asset recovery</A></LI><LI><A href="http://www.ibm.com/software/sw-services/?cm_re=masthead-_-itservices-_-software">Software services</A></LI></UL></DIV></LI><LI><A href="http://www.ibm.com/technologyservices/us/en/?cm_re=masthead-_-itservices-_-more">More</A></LI></UL></DIV></LI>
<LI id="ibm-unav-products"><A href="http://www.ibm.com/products/us/en/" class=" ibm-unav-has-child">Products</A><DIV class="ibm-unav-menu" id="gi-86fd51cb"><SPAN class="ibm-unav-menu-ehb" id="gi-86fd51cb-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI class=" ibm-place-holder"><A href="http://www.ibm.com/products/specialoffers/us/en/index.html?cm_re=masthead-_-products-_-promo" id="gi-b775e56b-trigger">Special offers</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-b775e56b"><SPAN class="ibm-unav-menu-ehb" id="gi-b775e56b-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-b79107bb-trigger">Software</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-b79107bb"><SPAN class="ibm-unav-menu-ehb" id="gi-b79107bb-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/software?pgel=ibmhzn&cm_re=masthead-_-products-_-sw-allsoftware">Software overview</A></LI><LI><A href="http://www.ibm.com/software/sw-products/?pgel=ibmhzn&cm_re=masthead-_-products-_-swbyall">All software products</A></LI><LI><A href="http://www.ibm.com/software/sw-businessneed/?pgel=ibmhzn&cm_re=masthead-_-products-_-swbybizneed">By business need</A></LI><LI><A href="http://www.ibm.com/software/sw-bycategory?pgel=ibmhzn&cm_re=masthead-_-products-_-sw-bycat">By category</A></LI><LI><A href="http://www.ibm.com/software/sw-atoz?pgel=ibmhzn&cm_re=masthead-_-products-_-sw-softwarea2z">A to Z</A></LI><LI><A href="http://www.ibm.com/software/sw-keyword/?pgel=ibmhzn&cm_re=masthead-_-products-_-swbykeyword">By keyword search</A></LI><LI><A href="http://www14.software.ibm.com/webapp/download/byproduct.jsp?pgel=ibmhzn1&cm_re=masthead-_-supdl-_-dl-trials">Trials and demos</A></LI><LI><A href="http://www.ibm.com/software/data?pgel=ibmhzn&cm_re=masthead-_-products-_-sw-infomgmt">Information Management</A></LI><LI><A href="http://www.ibm.com/software/lotus?pgel=ibmhzn&cm_re=masthead-_-products-_-sw-lotus">Lotus</A></LI><LI><A href="http://www.ibm.com/software/rational?pgel=ibmhzn&cm_re=masthead-_-products-_-sw-rational">Rational</A></LI><LI><A href="http://www.ibm.com/software/tivoli?pgel=ibmhzn&cm_re=masthead-_-products-_-sw-tivoli">Tivoli</A></LI><LI><A href="http://www.ibm.com/software/websphere?pgel=ibmhzn&cm_re=masthead-_-products-_-sw-websphere">WebSphere</A></LI><LI><A href="http://www.ibm.com/software/os/zseries?pgel=ibmhzn&cm_re=masthead-_-products-_-sw-sysz">System z software</A></LI></UL></DIV></LI><LI class=" ibm-place-holder"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-38f22e00-trigger">Storage</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-38f22e00"><SPAN class="ibm-unav-menu-ehb" id="gi-38f22e00-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/storage/?cm_re=masthead-_-products-_-stg-allstorage">All storage</A></LI><LI><A href="http://www.ibm.com/storage/disk/?cm_re=masthead-_-products-_-stg-disk">Disk systems</A></LI><LI><A href="http://www.ibm.com/storage/tape/?cm_re=masthead-_-products-_-stg-tape">Tape systems</A></LI><LI><A href="http://www.ibm.com/storage/snetwork/?cm_re=masthead-_-products-_-stg-san">Storage area networks</A></LI><LI><A href="http://www.ibm.com/totalstorage/nas/?cm_re=masthead-_-products-_-stg-nas">Network attached storage</A></LI><LI><A href="http://www.ibm.com/storage/software/?cm_re=masthead-_-products-_-stg-storagesoft">Storage software</A></LI><LI><A href="http://www.ibm.com/pc/ww/hdd/hddredirect.html?cm_re=masthead-_-products-_-stg-hdd">Hard drives/microdrives</A></LI><LI><A href="http://www.ibm.com/systems/storage/product/?cm_re=masthead-_-products-_-stg-storagea2z">Storage A to Z</A></LI></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-c55a057b-trigger">Systems &amp; servers</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-c55a057b"><SPAN class="ibm-unav-menu-ehb" id="gi-c55a057b-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/systems/?cm_re=masthead-_-products-_-sys-allsystems">All systems and servers</A></LI><LI><A href="http://www.ibm.com/systems/power/?cm_re=masthead-_-products-_-sys-power">Power Systems</A></LI><LI><A href="http://www.ibm.com/systems/i/?cm_re=masthead-_-products-_-sys-iseries">System i (iSeries)</A></LI><LI><A href="http://www.ibm.com/systems/p/?cm_re=masthead-_-products-_-sys-pseries">System p (pSeries)</A></LI><LI><A href="http://www.ibm.com/systems/z/?cm_re=masthead-_-products-_-sys-zseries">System z (Mainframe)</A></LI><LI><A href="http://www.ibm.com/systems/x/?cm_re=masthead-_-products-_-sys-xseries">System x (xSeries)</A></LI><LI><A href="http://www.ibm.com/servers/eserver/bladecenter/?cm_re=masthead-_-products-_-sys-blade">BladeCenter</A></LI><LI><A href="http://www.ibm.com/systems/clusters/?cm_re=masthead-_-products-_-sys-cluster">Cluster systems</A></LI><LI><A href="http://www.ibm.com/systems/hardware/browse/unix/?cm_re=masthead-_-products-_-sys-unix">UNIX servers</A></LI><LI><A href="http://www.ibm.com/servers/eserver/linux/?cm_re=masthead-_-products-_-sys-linux">Linux servers</A></LI><LI><A href="http://www.ibm.com/servers/jump_intel.html?cm_re=masthead-_-products-_-sys-intel">Intel processor-based servers</A></LI><LI><A href="http://www.ibm.com/servers/eserver/opteron/?cm_re=masthead-_-products-_-sys-amd">AMD processor-based servers</A></LI></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/products/retail/?cm_re=masthead-_-products-_-pos" id="gi-1a5321b0-trigger">Point of sale</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-1a5321b0"><SPAN class="ibm-unav-menu-ehb" id="gi-1a5321b0-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.infoprint.com/us" id="gi-334790e0-trigger">Printing systems from InfoPrint</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-334790e0"><SPAN class="ibm-unav-menu-ehb" id="gi-334790e0-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/technology/?cm_re=masthead-_-products-_-chips" id="gi-72a2924-trigger">Semiconductors</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-72a2924"><SPAN class="ibm-unav-menu-ehb" id="gi-72a2924-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/shop/americas/content/home/store_IBMPublicUSA/en_US/Upgrades.html?cm_re=masthead-_-products-_-upgrades" id="gi-a4c1f0af-trigger">Upgrades, accessories &amp; parts</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-a4c1f0af"><SPAN class="ibm-unav-menu-ehb" id="gi-a4c1f0af-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="http://www.ibm.com/systems/intellistation/?cm_re=masthead-_-products-_-workstations" id="gi-337e1e1c-trigger">Workstations</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-337e1e1c"><SPAN class="ibm-unav-menu-ehb" id="gi-337e1e1c-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="http://www.ibm.com/shop/americas/webapp/wcs/stores/servlet/HelpDisplay?storeId=1&catalogId=-840&langId=-1&subject=2576394&cm_re=masthead-_-products-_-ibmcue" id="gi-d380d10-trigger">Certified used PCs &amp; systems</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-d380d10"><SPAN class="ibm-unav-menu-ehb" id="gi-d380d10-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="http://www.ibm.com/community/?cm_re=masthead-_-products-_-promo" id="gi-478c6e2c-trigger">Communities</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-478c6e2c"><SPAN class="ibm-unav-menu-ehb" id="gi-478c6e2c-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/businesscenter/smallbusiness/us/en/product?cm_re=masthead-_-products-_-smallbus" id="gi-3a3028b8-trigger">Small business products</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-3a3028b8"><SPAN class="ibm-unav-menu-ehb" id="gi-3a3028b8-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-7a1a1e94-trigger">Medium business products</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-7a1a1e94"><SPAN class="ibm-unav-menu-ehb" id="gi-7a1a1e94-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/businesscenter/smb/us/en/product?cm_re=masthead-_-products-_-med-hardware">Hardware</A></LI><LI><A href="http://www.ibm.com/businesscenter/smb/us/en/software?cm_re=masthead-_-products-_-med-software">Software</A></LI></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/products/us/?cm_re=masthead-_-products-_-more" id="gi-ffbf835f-trigger">More</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-ffbf835f"><SPAN class="ibm-unav-menu-ehb" id="gi-ffbf835f-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI></UL></DIV></LI>
<LI id="ibm-unav-support"><A href="http://www.ibm.com/support/us/en/" class=" ibm-unav-has-child">Support &amp; downloads</A><DIV class="ibm-unav-menu" id="gi-6135010c"><SPAN class="ibm-unav-menu-ehb" id="gi-6135010c-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI class=" ibm-place-holder"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-cf99b4f7-trigger">Download</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-cf99b4f7"><SPAN class="ibm-unav-menu-ehb" id="gi-cf99b4f7-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/products/finder/us/finders?pg=ddfinder&cm_re=other-_-suprcn-_-download">Fixes, updates and drivers</A></LI><LI><A href="http://www14.software.ibm.com/webapp/download/byproduct.jsp?pgel=ibmhzn1&cm_re=masthead-_-supdl-_-dl-trials">Trials and demos</A></LI></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/troubleshooting/en_US?cm_re=other-_-suprcn-_-troubleshoot" id="gi-81786993-trigger">Troubleshoot</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-81786993"><SPAN class="ibm-unav-menu-ehb" id="gi-81786993-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/advsrch.wss?rs=0&loc=en_US&cm_re=masthead-_-supdl-_-search" id="gi-2999200-trigger">Search</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-2999200"><SPAN class="ibm-unav-menu-ehb" id="gi-2999200-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/documentation/en_US?cm_re=other-_-suprcn-_-documentation" id="gi-23e3b544-trigger">Documentation</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-23e3b544"><SPAN class="ibm-unav-menu-ehb" id="gi-23e3b544-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/forums/en_US?cm_re=other-_-suprcn-_-forums" id="gi-9cca68db-trigger">Forums &amp; communities</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-9cca68db"><SPAN class="ibm-unav-menu-ehb" id="gi-9cca68db-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/plan/en_US?cm_re=other-_-suprcn-_-plan" id="gi-7a0df220-trigger">Plan</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-7a0df220"><SPAN class="ibm-unav-menu-ehb" id="gi-7a0df220-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/install/en_US?cm_re=other-_-suprcn-_-install" id="gi-d3f16823-trigger">Install</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-d3f16823"><SPAN class="ibm-unav-menu-ehb" id="gi-d3f16823-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/use/en_US?cm_re=other-_-suprcn-_-use" id="gi-9900f7df-trigger">Use</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-9900f7df"><SPAN class="ibm-unav-menu-ehb" id="gi-9900f7df-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/electronic/uprtransition.wss?category=2&locale=en_us&cm_re=other-_-suprcn-_-request" id="gi-2087fdec-trigger">Open a technical service request</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-2087fdec"><SPAN class="ibm-unav-menu-ehb" id="gi-2087fdec-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="javascript:void(0);" class=" ibm-unav-menu-has-child" id="gi-527741cc-trigger">Support by product</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-527741cc"><SPAN class="ibm-unav-menu-ehb" id="gi-527741cc-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="http://www.ibm.com/software/support/?cm_re=masthead-_-supdl-_-sbp-software">Software</A></LI><LI><A href="http://www.ibm.com/systems/support?cm_re=masthead-_-supdl-_-sbp-systems">Systems and servers</A></LI><LI><A href="http://www.ibm.com/systems/support/supportsite.wss/brandmain?brandind=5345868&cm_re=masthead-_-supdl-_-sbp-storage">System storage</A></LI><LI><A href="http://www.infoprintsolutionscompany.com/internet/wwsites.nsf/vwwebpublished/supportoverview_ww">Printing systems from InfoPrint</A></LI><LI><A href="http://www.lenovo.com/support/?cm_re=masthead-_-supdl-_-sbp-lenovo">Lenovo ThinkPads and ThinkCentres</A></LI></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="http://www.ibm.com/support/operations/us/en?cm_re=masthead-_-supdl-_-getadmin" id="gi-2153001c-trigger">Customer support</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-2153001c"><SPAN class="ibm-unav-menu-ehb" id="gi-2153001c-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/us/en/?cm_re=masthead-_-supdl-_-more" id="gi-74a2d980-trigger">More</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-74a2d980"><SPAN class="ibm-unav-menu-ehb" id="gi-74a2d980-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI></UL></DIV></LI>
<LI id="ibm-unav-myibm" class=" ibm-is-active ibm-is-active"><A href="http://www.ibm.com/account/us/en/" class=" ibm-unav-has-child">My IBM</A><DIV class="ibm-unav-menu" id="gi-196d6dbc" style="display: none; "><SPAN class="ibm-unav-menu-ehb" id="gi-196d6dbc-ehb" style="height: 179px; display: none; "><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI class=" ibm-place-holder"><A href="http://www.ibm.com/account/myaccounts/us/en/?cm_re=masthead-_-myibm-_-myacct" id="gi-787aa2c4-trigger">My accounts</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-787aa2c4"><SPAN class="ibm-unav-menu-ehb" id="gi-787aa2c4-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="https://www.ibm.com/account/myibm/profile.do?cc=us&lc=&cm_re=masthead-_-myibm-_-myprofile" id="gi-50bc9940-trigger">My profile</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-50bc9940"><SPAN class="ibm-unav-menu-ehb" id="gi-50bc9940-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-myinterest"><A href="https://www.ibm.com/account/myibm/myinterestView.do?cc=us&lc=en&cm_re=masthead-_-myibm-_-myinterests" id="gi-26825854-trigger">My interests</A><DIV class="ibm-unav-menu ibm-myinterest" id="gi-26825854"><SPAN class="ibm-unav-menu-ehb" id="gi-26825854-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/account/mycommunity/us/en/" id="gi-1f0a8be8-trigger">My community spaces</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-1f0a8be8"><SPAN class="ibm-unav-menu-ehb" id="gi-1f0a8be8-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/support/mynotifications" id="gi-3a0a89b8-trigger">My support</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-3a0a89b8"><SPAN class="ibm-unav-menu-ehb" id="gi-3a0a89b8-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="javascript:void(0)" class=" ibm-unav-menu-has-child" id="gi-e98a71fb-trigger">My customer support</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-e98a71fb"><SPAN class="ibm-unav-menu-ehb" id="gi-e98a71fb-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL><LI><A href="https://www-132.ibm.com/webapp/wcs/stores/servlet/OrderItemDisplay?langId=-1&storeId=1&catalogId=-840&krypto=g3mOZ2uZQalqnkMCJkVJ1Q%3D%3D&ddkey=OrderItemDisplay&cm_re=masthead-_-myibm-_-cs-cart">Shopping cart</A></LI><LI><A href="http://www.ibm.com/support/operations/us/en/contracts?cm_re=masthead-_-myibm-_-cs-contracts">Contracts</A></LI><LI><A href="http://www.ibm.com/support/operations/us/en/orderdelivery?cm_re=masthead-_-myibm-_-cs-orders">Orders and delivery</A></LI><LI><A href="http://www.ibm.com/support/operations/us/en/inventory?cm_re=masthead-_-myibm-_-cs-inventory">Inventory and maintenance</A></LI><LI><A href="http://www.ibm.com/support/operations/us/en/invoicespayments?cm_re=masthead-_-myibm-_-cs-invoices">Invoices and payments</A></LI><LI><A href="http://www.ibm.com/support/operations/us/en/learnmore3a?cm_re=masthead-_-myibm-_-cs-self">Self-service tools</A></LI><LI><A href="http://www.ibm.com/support/operations/us?cm_re=masthead-_-myibm-_-cs-more">More customer support</A></LI></UL></DIV></LI><LI class=" ibm-mhdyn-rule"><A href="http://www-931.ibm.com/bin/subscriptions/welcome.cgi?cl=usen&cm_re=masthead-_-myibm-_-subscriptions" id="gi-8b00ea13-trigger">Subscriptions</A><DIV class="ibm-unav-menu ibm-mhdyn-rule" id="gi-8b00ea13"><SPAN class="ibm-unav-menu-ehb" id="gi-8b00ea13-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI><LI class=" ibm-place-holder"><A href="http://www.ibm.com/account/us/en/?cm_re=masthead-_-myibm-_-more" id="gi-dad7e027-trigger">More</A><DIV class="ibm-unav-menu ibm-place-holder" id="gi-dad7e027"><SPAN class="ibm-unav-menu-ehb" id="gi-dad7e027-ehb"><IMG alt="" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></SPAN><A class="ibm-access"></A><UL></UL></DIV></LI></UL></DIV></LI>
</UL>
</DIV>

<A name="main"></A></DIV>

<SCRIPT type="text/javascript" language="JavaScript" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/pmh.js">
</SCRIPT><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/print-header.gif" width="510" height="32" alt="" id="print-masthead">

<!--MASTHEAD_END--><!-- CMA ID: 10916 --> <!-- Site ID: 1 --><TABLE id="v14-body-table" border="0" cellpadding="0" cellspacing="0" width="100&percnt;"><TBODY><TR valign="top"><!--LEFTNAV_BEGIN--><TD id="navigation" width="150"><TABLE width="150" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD class="left-nav-spacer"><A href="http://www.ibm.com/developerworks" class="left-nav-overview">&nbsp;</A></TD></TR></TBODY></TABLE><TABLE width="150" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD colspan="2" class="left-nav-overview"><A href="http://www.ibm.com/developerworks" class="left-nav-overview">developerWorks</A></TD></TR></TBODY></TABLE><TABLE width="150" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD colspan="2" class="left-nav"><A class="left-nav" href="http://www.ibm.com/developerworks/views/java/libraryview.jsp?search_by=practice:">More in this series:</A><BR><A class="left-nav-child" href="http://www.ibm.com/developerworks/views/java/libraryview.jsp?search_by=practice:">Java theory and practice</A></TD></TR><TR><TD class="dw-left-nav-separator" width="14"><IMG alt="" height="6" width="14" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD class="dw-left-nav-separator" width="136"><IMG alt="" height="6" width="136" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD></TR><TR><TD colspan="2" class="left-nav-highlight"><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#" class="left-nav">In this article:</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#1.0" class="left-nav-child">What is a memory model, and why do I need one?</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#2.0" class="left-nav-child">Shortcomings of the original JMM</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#3.0" class="left-nav-child">Goals of JSR 133</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#4.0" class="left-nav-child">Synchronization and visibility</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#5.0" class="left-nav-child">Problem #1: Immutable objects weren&#39;t</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#6.0" class="left-nav-child">Problem #2: Reordering volatile and nonvolatile stores</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#7.0" class="left-nav-child">Summary</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#resources" class="left-nav-child">Resources</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#author" class="left-nav-child">About the author</A></TD></TR><TR class="left-nav-child-highlight"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/cl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#rate" class="left-nav-child">Rate this page</A></TD></TR><TR class="left-nav-last"><TD width="14"><IMG class="display-img" alt="" height="1" width="14" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD width="136"><IMG class="display-img" alt="" height="19" width="136" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/left-nav-corner.gif"></TD></TR></TBODY></TABLE><BR><TABLE width="150" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD class="related" colspan="2"><B class="related">Related links</B></TD></TR><TR class="rlinks"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/rl-bullet.gif"></TD><TD><A class="rlinks" href="http://www.ibm.com/developerworks/views/java/library.jsp">Java technology technical library</A></TD></TR><!--START RESERVED FOR FUTURE USE INCLUDE FILES--><!-- No content currently --><!--END RESERVED FOR FUTURE USE INCLUDE FILES--><TR><TD width="14"><IMG class="display-img" alt="" height="1" width="14" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD width="136"><IMG class="display-img" alt="" height="19" width="136" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD></TR></TBODY></TABLE><!--START RESERVED FOR FUTURE USE INCLUDE FILES--><!-- Next Steps Area:  Start -->
<!-- Commented out the include call in the dwmaster version of this file to prevent ajax calls
     being made during article previews and testing.  Live site has uncommented copy of this file (jpp) -->
<!-- Call Next Steps Servlet -->
<SCRIPT language="JavaScript" type="text/javascript">
<!--
/*
 * ajaxInclude makes a call to the url and render the results in the div tag specified in divId
 */
function ajaxInclude(url, divId) { 
 var req = newXMLHttpRequest(); 
 if (req) { 
   req.onreadystatechange = getReadyStateHandler(req, 
	function (result) {  
           var contents = document.getElementById(divId);  
           if (result != null && result.length > 0 && contents != null) {
	     contents.innerHTML = result;  
           }
        }); 
   req.open("GET", url, true);
   req.send("");
 }
}
//-->
</SCRIPT>

<!-- Display Next Steps Result -->
<DIV id="nextsteps">





















<!--XSLT stylesheet used to transform this content: nextsteps.xsl--><TABLE border="0" cellpadding="0" cellspacing="0" width="150"><TBODY><TR><TD class="vlgray"><TABLE border="0" cellpadding="0" cellspacing="0" width="150"><TBODY><TR><TD colspan="2"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" width="1" height="8" alt=""></TD></TR><TR><TD colspan="2" class="related"><B class="related">Next steps</B></TD></TR><TR><TD colspan="2" class="related"><P><SPAN class="fnt">Spring, JRuby, and Ajax development is easier with WebSphere Application Server - a smart Java 5 and J2EE Web services-based application server.</SPAN></P></TD></TR><TR class="rlinks"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/rl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/downloads/ws/wasce/learn.html?S_TACT=105AGY17&S_CMP=TECHSUG" class="rlinks">Try: The no-charge WebSphere Application Server Community Edition is a pre-integrated, lightweight Java 5 application server built on Apache Tomcat and other best-of-breed open source software such as OpenEJB, Apache Axis, and Apache Derby.</A></TD></TR><TR><TD colspan="2"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="8" width="150" alt=""></TD></TR><TR class="rlinks"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/rl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/websphere/library/techarticles/0810_asplund/0810_asplund.html?S_TACT=105AGY17&S_CMP=TECHSUG" class="rlinks">Article: The article leverage the Spring Framework and the WebSphere Application Server to improve your J2EE project productivity.</A></TD></TR><TR><TD colspan="2"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="8" width="150" alt=""></TD></TR><TR class="rlinks"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/rl-bullet.gif"></TD><TD><A href="http://www.ibm.com/developerworks/edu/x-dw-x-jrorajax.html?S_TACT=105AGY17&S_CMP=TECHSUG" class="rlinks">Tutorial: See how the free WebSphere Application Server and XML can improve the efficiency of your JRuby on Rails and Ajax development.</A></TD></TR><TR><TD colspan="2"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="8" width="150" alt=""></TD></TR><TR class="rlinks"><TD><IMG alt="" height="8" width="2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/rl-bullet.gif"></TD><TD><A href="http://www-142.ibm.com/software/dre/h2b/buildh2bpage.wss?synkey=G394201N28809H35&S_TACT=105AGY17&S_CMP=TECHSUG" class="rlinks">Buy: WebSphere Application Server - Express</A></TD></TR><TR><TD width="14"><IMG class="display-img" alt="" height="1" width="14" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD width="136"><IMG class="display-img" alt="" height="8" width="136" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
</DIV>

<!-- Initiate Next Steps Call -->
<SCRIPT language="JavaScript" type="text/javascript">
<!-- 
 ajaxInclude("/developerworks/niagara/jsp/getNiagaraContent.jsp?url="+window.location.href,"nextsteps");
//-->
</SCRIPT>
<!-- Next Steps Area:  End --><!--END RESERVED FOR FUTURE USE INCLUDE FILES--></TD><!--LEFTNAV_END--><TD width="100&percnt;"><TABLE id="content-table" border="0" cellpadding="0" cellspacing="0" width="100&percnt;"><TBODY><TR valign="top"><TD width="100&percnt;"><TABLE border="0" cellpadding="0" cellspacing="0" width="100&percnt;"><TBODY><TR><TD><A name="main"><IMG border="0" alt="skip to main content" height="1" width="592" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></A></TD></TR></TBODY></TABLE><TABLE border="0" cellpadding="0" cellspacing="0" width="100&percnt;"><TBODY><TR valign="top"><TD height="18" width="10"><IMG alt="" height="18" width="10" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD width="100&percnt;"><IMG alt="" height="6" width="1" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"><BR><A href="http://www.ibm.com/developerworks/" class="bctl">developerWorks</A><SPAN class="bct">&nbsp;&nbsp;&gt;&nbsp;&nbsp;</SPAN><A class="bctl" href="http://www.ibm.com/developerworks/java/">Java technology</A><SPAN class="bct">&nbsp;&nbsp;&gt;</SPAN><IMG alt="" height="1" width="1" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"><BR><H1><SPAN style="color: #999999">Java theory and practice: </SPAN>Fixing the Java Memory Model, Part 1</H1><P id="subtitle"><EM>What is the Java Memory Model, and how was it broken in the first place?</EM></P><IMG alt="" height="6" width="1" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" class="display-img"></TD><TD class="no-print" width="192"><A href="http://www.ibm.com/developerworks/"><IMG alt="developerWorks" border="0" height="18" width="192" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/dw.gif"></A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><TABLE border="0" cellpadding="0" cellspacing="0" width="100&percnt;"><TBODY><TR valign="top"><TD width="10"><IMG alt="" height="1" width="10" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD width="100&percnt;"><TABLE class="no-print" border="0" width="160" cellspacing="0" cellpadding="0" align="right"><TBODY><TR><TD width="10"><IMG alt="" height="1" width="10" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD><TABLE width="150" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD class="v14-header-1-small">Document options</TD></TR></TBODY></TABLE><TABLE class="v14-gray-table-border" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD class="no-padding" width="150"><NOSCRIPT></NOSCRIPT><NOSCRIPT></NOSCRIPT><TABLE width="143" cellspacing="0" cellpadding="0" border="0"><SCRIPT language="JavaScript" type="text/javascript">
<!--
document.write('<tr valign="top"><td width="8"><img src="//www.ibm.com/i/c.gif" width="8" height="1" alt=""/></td><td width="16"><img alt="Set printer orientation to landscape mode" height="16" src="//www.ibm.com/i/v14/icons/printer.gif" width="16" vspace="3" /></td><td width="122"><p><b><a class="smallplainlink" href="javascript:print()">Print this page</a></b></p></td></tr>');
//-->
</SCRIPT><TBODY><TR valign="top"><TD width="8"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" width="8" height="1" alt=""></TD><TD width="16"><IMG alt="Set printer orientation to landscape mode" height="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/printer.gif" width="16" vspace="3"></TD><TD width="122"><P><B><A class="smallplainlink" href="javascript:print()">Print this page</A></B></P></TD></TR>
<SCRIPT language="JavaScript" type="text/javascript">
<!-- 5.6 10/24 llk: added cdata around the subdirectory path of email gif-->
<!--
document.write('<tr valign="top"><td width="8"><img src="//www.ibm.com/i/c.gif" width="8" height="1" alt=""/></td><td width="16"><img src="//www.ibm.com/i/v14/icons/em.gif" height="16" width="16" vspace="3" alt="Email this page" /></td><td width="122"><p><a class="smallplainlink" href="javascript:void newWindow()"><b>E-mail this page</b></a></p></td></tr>');
//-->
</SCRIPT><TR valign="top"><TD width="8"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" width="8" height="1" alt=""></TD><TD width="16"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/em.gif" height="16" width="16" vspace="3" alt="Email this page"></TD><TD width="122"><P><A class="smallplainlink" href="javascript:void newWindow()"><B>E-mail this page</B></A></P></TD></TR><TR valign="top"><TD width="8"><IMG alt="" height="1" width="8" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD width="16"><IMG alt="" vspace="3" border="0" width="16" height="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/fw_bold.gif"></TD><TD width="122"><P><A class="smallplainlink" href="http://www-106.ibm.com/developerworks/forums/dw_forum.jsp?forum=181&cat=10"><B>Discuss</B></A></P></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><!--START RESERVED FOR FUTURE USE INCLUDE FILES--><!--Updated 12/04/08 by gem-->
<BR><TABLE border="0" cellpadding="0" cellspacing="0" width="150"><TBODY><TR><TD class="v14-header-2-small">Hey there! developerWorks is using Twitter</TD></TR></TBODY></TABLE><TABLE border="0" cellpadding="0" cellspacing="0" class="v14-gray-table-border"><TBODY><TR><TD width="150" class="no-padding"><TABLE border="0" cellpadding="0" cellspacing="0" width="143"><TBODY><TR valign="top"><TD width="8"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" width="8" height="1" alt=""></TD><TD><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/fw_bold.gif" height="16" width="16" border="0" vspace="3" alt=""></TD><TD width="125"><P><A href="http://www.twitter.com/developerworks/?S_TACT=105AGX01&S_CMP=nsf" class="smallplainlink">Follow  us</A></P></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><!--END RESERVED FOR FUTURE USE INCLUDE FILES--><BR><TABLE width="150" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD class="v14-header-2-small">Rate this page</TD></TR></TBODY></TABLE><TABLE class="v14-gray-table-border" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD class="no-padding" width="150"><TABLE width="143" cellspacing="0" cellpadding="0" border="0"><TBODY><TR valign="top"><TD width="8"><IMG alt="" height="1" width="8" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD><IMG alt="" vspace="3" border="0" width="16" height="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/d_bold.gif"></TD><TD width="125"><P><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#rate" class="smallplainlink"><B>Help us improve this content</B></A></P></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><BR></TD></TR></TBODY></TABLE><P>Level: Advanced</P><P><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#author">Brian Goetz</A> (<A href="mailto:brian@quiotix.com?subject=Fixing%20the%20Java%20Memory%20Model,%20Part%201">brian@quiotix.com</A>), Principal Consultant, Quiotix Corp<BR></P><P> 24 Feb  2004</P><BLOCKQUOTE>JSR 133, which has been active for nearly three years, has recently issued its public recommendation on what to do about the Java Memory Model (JMM). Several serious flaws were found in the original JMM, resulting in some surprisingly difficult semantics for concepts that were supposed to be simple, like <CODE>volatile</CODE>, <CODE>final</CODE>, and <CODE>synchronized</CODE>. In this installment of <I>Java theory and practice</I>, Brian Goetz shows how the semantics of <CODE>volatile</CODE> and <CODE>final</CODE> will be strengthened in order to fix the JMM. Some of these changes have already been integrated in JDK 1.4; others are slated for inclusion in JDK 1.5.</BLOCKQUOTE><!--START RESERVED FOR FUTURE USE INCLUDE FILES--><SCRIPT type="text/javascript" language="javascript">
	     // <![CDATA[
			capture_referrer();
		 // ]]>
</SCRIPT>

<!--  START : HTML FOR SEARCH REFERRER -->
  <DIV id="search_referrer_results" style="display:none">


<!--  START : HTML FOR ARTICLE SEARCH -->
  <DIV id="article_results" style="display:block"></DIV>
<!--  END : HTML FOR ARTICLE SEARCH -->

<!--  START : HTML FOR CODE SEARCH -->
   <DIV id="code_results" style="display:block"></DIV>
<!--  END : HTML FOR CODE SEARCH -->


   <BR>
   <BR>
   </DIV>
<!--  END : HTML FOR SEARCH REFERRER --><!--END RESERVED FOR FUTURE USE INCLUDE FILES--><P>
The Java platform has integrated threading and multiprocessing into the language to a much greater degree than most previous programming languages. The language&#39;s support for platform-independent concurrency and multithreading was ambitious and pioneering, and, perhaps not surprisingly, the problem was a bit harder than the Java architects originally thought. Underlying much of the confusion surrounding synchronization and thread safety are the non-intuitive subtleties of the Java Memory Model (JMM), originally specified in Chapter 17 of the Java Language Specification, and re-specified by JSR 133.
</P>

<P>
For example, not all multiprocessor systems exhibit <I>cache coherency</I>; if one processor has an updated value of a variable in its cache, but one which has not yet been flushed to main memory, other processors may not see that update.  In the absence of cache coherency, two different processors may see two different values for the same location in memory.  This may sound scary, but it is by design -- it is a means of obtaining higher performance and scalability -- but it places a burden on developers and compilers to create code that accommodates these issues.
</P>


<P><A name="1.0"><SPAN class="atitle">What is a memory model, and why do I need one?</SPAN></A></P>
<P>A memory model describes the relationship between variables in a program (instance fields, static fields, and array elements) and the low-level details of storing them to and retrieving them from memory in a real computer system.  Objects are ultimately stored in memory, but the compiler, runtime, processor, or cache may take some liberties with the timing of moving values to or from a variable&#39;s assigned memory location.  For example, a compiler may choose to optimize a loop index
variable by storing it in a register, or the cache may delay flushing a new value of a variable to main memory until a more opportune time. All of these optimizations are to aid in higher performance, and are generally transparent to the user, but on multiprocessor systems, these complexities may sometimes show through.
</P>
<TABLE align="right" border="0" cellspacing="0" cellpadding="0" width="40&percnt;"><TBODY><TR><TD width="10"><IMG alt="" height="1" width="10" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD><TABLE border="1" cellspacing="0" cellpadding="5" width="100&percnt;"><TBODY><TR><TD bgcolor="#eeeeee">
<A name="sidebar1"><B>Don&#39;t miss the rest of this series</B></A><BR>
<P>Part 2, &quot;<A href="http://www.ibm.com/developerworks/library/j-jtp03304/">How will the JMM change under JSR 133</A>&quot; (March 2004)</P>
</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<P>
The JMM allows the compiler and cache to take significant liberties with the order in which data is moved between a processor-specific cache (or register) and main memory, unless the programmer has explicitly asked for certain visibility guarantees using <CODE>synchronized</CODE> or <CODE>volatile</CODE>.  This means that in the absence of synchronization, memory operations can appear to happen in different orders from the perspective of different threads.
</P>

<P>
By contrast, languages like C and C++ do not have explicit memory models -- C programs instead inherit the memory model of the processor executing the program (although the compiler for a given architecture probably does know something about the memory model of the underlying processor, and some of the responsibility for compliance falls to the compiler). This means that concurrent C programs may run correctly on one processor architecture, but not another.  While the JMM may be
confusing at first, there is a significant benefit to it -- a program that is correctly synchronized according to the JMM should run correctly on any Java-enabled platform.  
</P>



<BR><TABLE border="0" cellspacing="0" cellpadding="0" width="100&percnt;"><TBODY><TR><TD><IMG width="100&percnt;" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/blue_rule.gif" height="1" alt=""></TD></TR></TBODY></TABLE><TABLE class="no-print" cellspacing="0" cellpadding="0" align="right"><TBODY><TR align="right"><TD><TABLE border="0" cellpadding="0" cellspacing="0"><TBODY><TR><TD valign="middle"><IMG width="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/u_bold.gif" height="16" border="0" alt=""><BR></TD><TD valign="top" align="right"><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#main" class="fbox"><B>Back to top</B></A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><BR><BR><P><A name="2.0"><SPAN class="atitle">Shortcomings of the original JMM</SPAN></A></P> 
<P>While the JMM specified in chapter 17 of the <I>Java Language Specification</I> was an ambitious attempt to define a
consistent, cross-platform memory model, it had some subtle but significant failings.  The semantics of <CODE>synchronized</CODE> and <CODE>volatile</CODE> were quite confusing, so much so that many
knowledgeable developers chose to sometimes ignore the rules because writing properly synchronized code under the old memory model was so difficult.
</P>

<P>
The old JMM allowed some surprising and confusing things to happen, such as final fields appearing not to have the value that was set in the constructor (thus making supposedly immutable objects not immutable) and unexpected results with memory operation reordering. It also prevented some otherwise effective compiler optimizations.  If you&#39;ve read any of the articles on the double-checked locking problem (see <A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#resources">Resources</A>), you&#39;ll recall how confusing memory operation reordering can be, and how subtle but serious problems can sneak into your code when you don&#39;t properly synchronize (or actively try to avoid synchronizing).  Worse, many incorrectly synchronized programs appear to work correctly in some situations, such as under light load, on uniprocessor systems, or on processors with stronger memory models than required by the JMM.
</P>

<P>
The term reordering is used to describe several classes of actual and apparent reorderings of memory operations:</P>

<UL>
<LI>The compiler is free to reorder certain instructions as an optimization when it would not change the semantics of the
program.</LI>

<LI>The processor is allowed to execute operations out of order under some circumstances.</LI>

<LI>The cache is generally allowed to write variables back to main memory in a different order than they were written by the program.</LI>
</UL>

<P>
Any of these conditions could cause operations to appear, from the perspective of another thread, to occur in a different order than specified by the program -- and regardless of the source of the reordering, all are considered equivalent by the memory model.
</P>



<BR><TABLE border="0" cellspacing="0" cellpadding="0" width="100&percnt;"><TBODY><TR><TD><IMG width="100&percnt;" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/blue_rule.gif" height="1" alt=""></TD></TR></TBODY></TABLE><TABLE class="no-print" cellspacing="0" cellpadding="0" align="right"><TBODY><TR align="right"><TD><TABLE border="0" cellpadding="0" cellspacing="0"><TBODY><TR><TD valign="middle"><IMG width="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/u_bold.gif" height="16" border="0" alt=""><BR></TD><TD valign="top" align="right"><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#main" class="fbox"><B>Back to top</B></A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><BR><BR><P><A name="3.0"><SPAN class="atitle">Goals of JSR 133</SPAN></A></P>  
<P>JSR 133, chartered to fix the JMM, has several goals:</P>

<UL>
<LI>Preserve existing safety guarantees, including type-safety.<BR><BR></LI>

<LI>Provide <I>out-of-thin-air safety</I>. This means that variable values are not created &quot;out of thin air&quot; -- so for a thread to observe a variable to have value X, some thread must have actually written the value X to that variable in the past.<BR><BR></LI>

<LI>The semantics of &quot;correctly synchronized&quot; programs should be as simple and intuitive as feasible.  Thus, &quot;correctly synchronized&quot; should be defined both formally and intuitively (and the two definitions should be consistent with each other!).<BR><BR></LI>

<LI>Programmers should be able to create multithreaded programs with confidence that they will be reliable and correct.  Of course, there is no magic that makes writing concurrent applications easy, but the goal is to relieve application writers of the burden of understanding all the subtleties of the memory model.<BR><BR></LI>

<LI>High performance JVM implementations across a wide range of popular hardware architectures should be possible.  Modern processors differ substantially in their memory models; the JMM should accommodate as many possible architectures as practical, without sacrificing performance.<BR><BR></LI>

<LI>Provide a synchronization idiom that allows us to publish an object and have it be visible without synchronization.  This is a new safety guarantee called <I>initialization safety</I>.<BR><BR></LI>

<LI>There should be minimal impact on existing code.</LI>
</UL>

<P>
It is worth noting that broken techniques like double-checked locking are still broken under the new memory model, and that &quot;fixing&quot; double-checked locking was not one of the goals of the new memory model effort.  (However, the new semantics of <CODE>volatile</CODE> allow one of the commonly proposed alternatives to double-checked locking to work correctly, although the technique is still discouraged.)
</P>

<P>
In the three years since the JSR 133 process has been active, it has been discovered that these issues are far more subtle than anyone gave them credit for.  Such is the price of being a pioneer!  The final formal semantics are more complicated than originally expected, and in fact took quite a different form than initially envisioned, but the informal semantics are clear and intuitive and will be outlined in Part 2 of this article.
</P>


<BR><TABLE border="0" cellspacing="0" cellpadding="0" width="100&percnt;"><TBODY><TR><TD><IMG width="100&percnt;" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/blue_rule.gif" height="1" alt=""></TD></TR></TBODY></TABLE><TABLE class="no-print" cellspacing="0" cellpadding="0" align="right"><TBODY><TR align="right"><TD><TABLE border="0" cellpadding="0" cellspacing="0"><TBODY><TR><TD valign="middle"><IMG width="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/u_bold.gif" height="16" border="0" alt=""><BR></TD><TD valign="top" align="right"><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#main" class="fbox"><B>Back to top</B></A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><BR><BR><P><A name="4.0"><SPAN class="atitle">Synchronization and visibility</SPAN></A></P> 
<P>Most programmers know that the <CODE>synchronized</CODE> keyword enforces a mutex (mutual exclusion) that prevents more than one thread at a time from entering a synchronized block protected by a given monitor.  But synchronization also has another aspect: It enforces certain memory visibility rules as specified by the JMM.  It ensures that caches are flushed when exiting a synchronized block and invalidated when entering one, so that a value written by one thread during a synchronized block protected by a given monitor is visible to any other thread executing a synchronized block protected by that same monitor.  It also ensures that the compiler does not move instructions from inside a
synchronized block to outside (although it can in some cases move instructions from outside a synchronized block inside).  The JMM does not make this guarantee in the absence of synchronization -- which is why synchronization (or its younger sibling, volatile) must be used whenever multiple threads are accessing the same variables.
</P>


<BR><TABLE border="0" cellspacing="0" cellpadding="0" width="100&percnt;"><TBODY><TR><TD><IMG width="100&percnt;" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/blue_rule.gif" height="1" alt=""></TD></TR></TBODY></TABLE><TABLE class="no-print" cellspacing="0" cellpadding="0" align="right"><TBODY><TR align="right"><TD><TABLE border="0" cellpadding="0" cellspacing="0"><TBODY><TR><TD valign="middle"><IMG width="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/u_bold.gif" height="16" border="0" alt=""><BR></TD><TD valign="top" align="right"><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#main" class="fbox"><B>Back to top</B></A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><BR><BR><P><A name="5.0"><SPAN class="atitle">Problem #1: Immutable objects weren&#39;t</SPAN></A></P> 
<P>One of the most surprising failings of the JMM is that immutable objects, whose immutability was intended to be
guaranteed through use of the <CODE>final</CODE> keyword, could appear to change their value.  (Public Service Reminder: Making all fields of an object <CODE>final</CODE> does not necessarily make the object
immutable -- all fields must <I>also</I> be primitive types or references to immutable objects.)  Immutable objects, like
<CODE>String</CODE>, are supposed to require no synchronization. However, because of potential delays in propagating changes in memory writes from one thread to another, there is a possible race condition that would allow a thread to first see one value for an immutable object, and then at some later time see a different value.</P>
<P>How can this happen?  Consider the implementation of <CODE>String</CODE> in the Sun 1.4 JDK, where there are basically three important final fields: a reference to a character array, a length, and an offset into the character array that describes the start of the string being represented.  <CODE>String</CODE> was implemented this way, instead of having only the character array, so character arrays could be shared among multiple <CODE>String</CODE> and <CODE>StringBuffer</CODE> objects without having to copy the text into a new array every time a <CODE>String</CODE> is created.  For example, <CODE>String.substring()</CODE> creates a new string that shares the same character array with the original <CODE>String</CODE> and merely differs in the length and offset fields.
</P>

<P>
Suppose you execute the following code:
</P>

<TABLE width="100&percnt;" cellpadding="0" cellspacing="0" border="0"><TBODY><TR><TD class="code-outline"><PRE class="displaycode">String s1 = &quot;/usr/tmp&quot;;
String s2 = s1.substring(4);   // contains &quot;/tmp&quot;
</PRE></TD></TR></TBODY></TABLE><BR>

<P>
The string <CODE>s2</CODE> will have an offset of 4 and a length of 4, but will share the same character array, the one containing <CODE>&quot;/usr/tmp&quot;</CODE>, with <CODE>s1</CODE>.  Before the
<CODE>String</CODE> constructor runs, the constructor for <CODE>Object</CODE> will initialize all fields, including the final length and offset fields, with their default values.  When the <CODE>String</CODE> constructor runs, the length and offset are then set to their desired values.  But under the old memory model, in the absence of synchronization, it is possible for another thread to temporarily see the offset field as having the default value of 0, and then later see the correct value of 4.  The effect is that the value of <CODE>s2</CODE> changes from <CODE>&quot;/usr&quot;</CODE> to <CODE>&quot;/tmp&quot;</CODE>.  This is not what was intended, and it might not be possible on all JVMs or platforms, but it <I>was</I> allowed by the old memory model specification.
</P>



<BR><TABLE border="0" cellspacing="0" cellpadding="0" width="100&percnt;"><TBODY><TR><TD><IMG width="100&percnt;" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/blue_rule.gif" height="1" alt=""></TD></TR></TBODY></TABLE><TABLE class="no-print" cellspacing="0" cellpadding="0" align="right"><TBODY><TR align="right"><TD><TABLE border="0" cellpadding="0" cellspacing="0"><TBODY><TR><TD valign="middle"><IMG width="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/u_bold.gif" height="16" border="0" alt=""><BR></TD><TD valign="top" align="right"><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#main" class="fbox"><B>Back to top</B></A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><BR><BR><P><A name="6.0"><SPAN class="atitle">Problem #2: Reordering volatile and nonvolatile stores</SPAN></A></P> 
<P>The other major area where the existing JMM caused some very confusing results was with memory operation reordering on <CODE>volatile</CODE> fields.  The existing JMM says that volatile reads and writes are to go directly to main memory, prohibiting caching values in registers and bypassing processor-specific caches.  This allows multiple threads to always see the most up-to-date value for a given variable.  However, it turns out that this definition of <CODE>volatile</CODE> was not as useful as first intended, and resulted in significant confusion on the actual
meaning of <CODE>volatile</CODE>.
</P>

<P>
In order to provide good performance in the absence of synchronization, the compiler, runtime, and cache are generally
allowed to reorder ordinary memory operations as long as the currently executing thread cannot tell the difference.  (This is referred to as <I>within-thread as-if-serial semantics</I>.)  Volatile reads and writes, however, are totally ordered across threads; the compiler or cache cannot reorder volatile reads and writes with each other. Unfortunately, the JMM did allow volatile reads and writes to be reordered with respect to ordinary variable reads and writes, meaning
that we cannot use volatile flags as an indication of what operations have been completed.  Consider the following code, where the intention is that the volatile field <CODE>initialized</CODE> is supposed to indicate that initialization has been completed:
</P>


<BR><A name="listing1"><B>Listing 1.  Using a volatile field as a &quot;guard&quot; variable.</B></A><BR>
<TABLE width="100&percnt;" cellpadding="0" cellspacing="0" border="0"><TBODY><TR><TD class="code-outline"><PRE class="displaycode">Map configOptions;
char[] configText;
volatile boolean initialized = false;

. . .

// In thread A

configOptions = new HashMap();
configText = readConfigFile(fileName);
processConfigOptions(configText, configOptions);
initialized = true;

. . .

// In thread B

while (!initialized) 
  sleep();
// use configOptions 
</PRE></TD></TR></TBODY></TABLE><BR>

<P>
The idea here is that the volatile variable <CODE>initialized</CODE> acts as a guard to indicate that a set of other operations have completed.  It&#39;s a good idea, but under the old JMM it didn&#39;t work, because the old JMM allowed nonvolatile writes (such as the write to the <CODE>configOptions</CODE> field, as well as the writes to the
fields of the <CODE>Map</CODE> referenced by <CODE>configOptions</CODE>) to be reordered with volatile writes.  So another thread might see <CODE>initialized</CODE> as true, but not yet have a consistent or current view of the field <CODE>configOptions</CODE> or the objects it references.  The old
semantics of <CODE>volatile</CODE> only made promises about the visibility of the variable being read or written, and no promises about other variables.  While this approach was easier to implement efficiently, it turned out to be less useful than initially thought.
</P>



<BR><TABLE border="0" cellspacing="0" cellpadding="0" width="100&percnt;"><TBODY><TR><TD><IMG width="100&percnt;" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/blue_rule.gif" height="1" alt=""></TD></TR></TBODY></TABLE><TABLE class="no-print" cellspacing="0" cellpadding="0" align="right"><TBODY><TR align="right"><TD><TABLE border="0" cellpadding="0" cellspacing="0"><TBODY><TR><TD valign="middle"><IMG width="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/u_bold.gif" height="16" border="0" alt=""><BR></TD><TD valign="top" align="right"><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#main" class="fbox"><B>Back to top</B></A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><BR><BR><P><A name="7.0"><SPAN class="atitle">Summary</SPAN></A></P>
<P>As specified in Chapter 17 of the <I>Java Language Specification</I>, the JMM has some serious flaws that allow some unintuitive and undesirable things to happen to reasonable-looking programs.  If it is too difficult to write concurrent classes properly, then we are guaranteed that many concurrent classes will not work as expected, and that this is a flaw in the platform.  Fortunately, it was possible to create a memory model that was more consistent with most developer&#39;s
intuition while not breaking any code that was properly synchronized under the old memory model, and the JSR 133 process has done just that.  Next month, we&#39;ll look at the details of the new memory model (much of which is already built into the 1.4 JDK).
</P>

<BR><BR><P><A name="resources"><SPAN class="atitle">Resources</SPAN></A></P><UL><LI><A href="http://www-106.ibm.com/developerworks/forums/dw_forum.jsp?forum=181&cat=10">Participate in the discussion forum</A>.<BR><BR></LI><LI>Read the complete <A href="http://www-128.ibm.com/developerworks/views/java/libraryview.jsp?search_by=practice:"><I>Java theory and practice</I></A> series by Brian Goetz.<BR><BR></LI><LI>Bill Pugh, who originally discovered many of the problems with the Java Memory Model, maintains a <A href="http://www.cs.umd.edu/~pugh/java/memoryModel/">Java Memory Model page</A>.<BR><BR></LI><LI>The issues with the old memory model and a summary of the new memory model semantics can be found in the 
<A href="http://www.cs.umd.edu/users/pugh/java/memoryModel/jsr-133-faq.html">JSR 133 FAQ</A>.
<BR><BR></LI><LI>Read more about the <A href="http://www.javaworld.com/jw-02-2001/jw-0209-double.html">double-checked locking
problem</A>, and <A href="http://www.javaworld.com/javaworld/jw-05-2001/jw-0525-double.html">why
the obvious attempts to fix it don&#39;t work</A>.<BR><BR></LI><LI>Read more about why you don&#39;t want to let a reference to an object <A href="http://www.ibm.com/developerworks/java/library/j-jtp0618.html">escape during construction</A>.<BR><BR></LI><LI><A href="http://jcp.org/en/jsr/detail?id=133">JSR 133</A>, charged with revising the JMM, was convened under the Java Community Process. JSR 133 has recently released its <A href="http://jcp.org/aboutJava/communityprocess/review/jsr133/index.html">public review specification</A>.<BR><BR></LI><LI>If you want to see how specifications like this are made, browse the <A href="http://www.cs.umd.edu/~pugh/java/memoryModel/archive/">JMM mailing list archive</A>.<BR><BR></LI><LI><A href="http://www.amazon.com/gp/product/0201310090/104-1464220-8871162?n=283155"><I>Concurrent Programming in Java</I></A>, by Doug Lea is a masterful book on the subtle issues surrounding multithreaded programming in Java.<BR><BR></LI><LI><A href="http://gee.cs.oswego.edu/dl/cpj/jmm.html">Synchronization and the Java Memory Model</A> summarizes the actual meaning of synchronization.<BR><BR></LI><LI><A href="http://java.sun.com/docs/books/jls/">The Java Language Specification</A>, Chapter 17, covers the gory details of the original Java Memory Model.<BR><BR></LI><LI>Find hundreds more Java technology resources on the 
<A href="http://www.ibm.com/developerworks/java/"><I>developerWorks</I> Java technology zone</A>.<BR><BR></LI><LI><A href="http://www.ibm.com/developerworks/apps/SendTo?bookstore=safari">Browse for books</A> on these and other technical topics.<BR></LI></UL>
<BR><BR><P><A name="author"><SPAN class="atitle">About the author</SPAN></A></P><TABLE border="0" cellspacing="0" cellpadding="0" width="100&percnt;"><TBODY><TR><TD colspan="3"><IMG alt="" width="100&percnt;" height="5" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD></TR><TR align="left" valign="top"><TD><P></TD><TD><IMG alt="" width="4" height="5" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD width="100&percnt;"><P>Brian Goetz has been a professional software developer for over 15 years.  He is a Principal Consultant at Quiotix, a software development and consulting firm located in Los Altos, California, and he serves on several JCP Expert Groups.  See Brian&#39;s <A href="http://www.briangoetz.com/pubs.html">published and upcoming articles</A> in popular industry publications.</P></TD></TR></TBODY></TABLE><BR><BR><BR><P class="no-print"><SPAN class="atitle"><A name="rate">Rate this page</A></SPAN></P><SPAN class="no-print"><FORM action="http://www-128.ibm.com/developerworks/utils/RatingsHandler" method="post"><INPUT value="1" name="SITE_ID" type="hidden"><INPUT value="Java theory and practice: Fixing the Java Memory Model, Part 1" name="ArticleTitle" type="hidden"><INPUT value="Java technology" name="Zone" type="hidden"><INPUT value="http://www.ibm.com/developerworks/thankyou/feedback-thankyou.html" name="RedirectURL" type="hidden"><INPUT value="10916" name="ArticleID" type="hidden"><INPUT value="02242004" name="publish-date" type="hidden"><INPUT type="hidden" name="author1-email" value="brian@quiotix.com"><INPUT type="hidden" name="author1-email-cc" value=""><SCRIPT language="javascript" type="text/javascript">document.write('<input type="hidden" name="url" value="'+location.href+'" />');</SCRIPT><INPUT type="hidden" name="url" value="http://www.ibm.com/developerworks/java/library/j-jtp02244.html"><IMG width="100&percnt;" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/gray_rule.gif" height="1" alt=""><BR><TABLE width="100&percnt;" class="v14-gray-table-border" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD width="100&percnt;"><TABLE width="100&percnt;" border="0" cellpadding="0" cellspacing="0"><TBODY><TR><TD colspan="3"><P>Please take a moment to complete this form to help us better serve you.</P></TD></TR><TR valign="top"><TD width="140"><IMG width="140" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="1" alt=""><BR><P><LABEL for="Goal">Did the information help you to achieve your goal?</LABEL></P></TD><TD width="303"><IMG width="303" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="6" alt=""><BR><TABLE width="100&percnt;" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD><INPUT value="Yes" id="goal-yes" name="goal" type="radio"><LABEL for="goal-yes">Yes</LABEL></TD><TD><INPUT value="No" id="goal-no" name="goal" type="radio"><LABEL for="goal-no">No</LABEL></TD><TD><INPUT value="Don&#39;t know" id="goal-undecided" name="goal" type="radio"><LABEL for="goal-undecided">Don&#39;t know</LABEL></TD></TR></TBODY></TABLE></TD><TD width="100&percnt;">&nbsp;</TD></TR><TR><TD colspan="3"><IMG alt="" height="12" width="8" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD></TR><TR valign="top"><TD width="140"><IMG width="140" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="1" alt=""><BR><P><LABEL for="Comments">Please provide us with comments to help improve this page:</LABEL></P></TD><TD width="303"><IMG width="303" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="6" alt=""><BR><TABLE width="100&percnt;" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD><TEXTAREA class="iform" cols="35" rows="5" wrap="virtual" id="Comments" name="Comments">&nbsp;</TEXTAREA></TD></TR></TBODY></TABLE></TD><TD width="100&percnt;">&nbsp;</TD></TR><TR><TD colspan="3"><IMG alt="" height="12" width="8" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD></TR><TR valign="top"><TD width="140"><IMG width="140" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="1" alt=""><BR><P><LABEL for="Rating">How useful is the information?</LABEL></P></TD><TD width="303"><IMG width="303" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="6" alt=""><BR><TABLE width="100&percnt;" cellspacing="0" cellpadding="0" border="0"><TBODY><TR><TD align="left" width="58"><INPUT value="1" id="Rating1" name="Rating" type="radio"><LABEL for="Rating1">1</LABEL></TD><TD align="left" width="58"><INPUT value="2" id="Rating2" name="Rating" type="radio"><LABEL for="Rating2">2</LABEL></TD><TD align="left" width="58"><INPUT value="3" id="Rating3" name="Rating" type="radio"><LABEL for="Rating3">3</LABEL></TD><TD align="left" width="58"><INPUT value="4" id="Rating4" name="Rating" type="radio"><LABEL for="Rating4">4</LABEL></TD><TD align="left" width="61"><INPUT value="5" id="Rating5" name="Rating" type="radio"><LABEL for="Rating5">5</LABEL></TD></TR><TR><TD align="left" width="60"><SPAN class="greytext">Not</SPAN><BR><SPAN class="greytext">useful</SPAN></TD><TD align="left" width="60"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="1" width="1" alt=""></TD><TD align="left" width="60"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="1" width="1" alt=""></TD><TD align="left" width="60"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif" height="1" width="1" alt=""></TD><TD align="left" width="63"><SPAN class="greytext">Extremely<BR>useful</SPAN></TD></TR></TBODY></TABLE></TD><TD width="100&percnt;">&nbsp;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><TABLE class="v14-gray-table-border" width="100&percnt;" border="0" cellpadding="0" cellspacing="0"><TBODY><TR><TD colspan="3"><IMG alt="" height="8" width="8" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD></TR><TR><TD width="8"><IMG alt="" height="1" width="8" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD><TD colspan="3"><INPUT alt="Submit" height="21" width="120" border="0" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/submit.gif" type="image"></TD></TR><TR><TD colspan="3"><IMG alt="" height="8" width="8" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD></TR></TBODY></TABLE></FORM><BR></SPAN><BR><P><TABLE width="100&percnt;" cellpadding="5" cellspacing="0" border="0">
<TBODY><TR><TD><SPAN class="atitle">Share this.... </SPAN><P>
</P><TABLE cellpadding="0" cellspacing="0" width="100&percnt;" border="0">
<TBODY><TR align="left" valign="top">
<TD width="21">
	<A href="javascript:location.href='http://digg.com/submit?phase=2&url='+encodeURIComponent(location.href)+'&title='+encodeURIComponent(document.title)">
<IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/10x10-digg-thumb.gif" width="10" height="10" alt="digg" border="0"></A></TD>
	<TD width="120">
             <A href="javascript:location.href='http://digg.com/submit?phase=2&url='+encodeURIComponent(location.href)+'&title='+encodeURIComponent(document.title)"><SPAN style="nowrap">Digg this story</SPAN></A></TD>

<!--<td width="8"><img alt="" height="1" width="8" src="//www.ibm.com/i/c.gif"/></td>-->
<TD width="21"><IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/icon_delicious.gif" height="16" width="16" alt="del.icio.us" border="0"> </TD>
<TD width="100"><A class="fbox" href="http://del.icio.us/post" onclick="window.open(&#39;http://del.icio.us/post?v=4&amp;noui&amp;jump=close&amp;url=&#39;+encodeURIComponent(location.href)+&#39;&amp;title=&#39;+encodeURIComponent(document.title), &#39;delicious&#39;,&#39;toolbar=no,width=700,height=400&#39;); return false;"><SPAN style="nowrap">del.icio.us</SPAN></A></TD>

<!--<td width="8"><img alt="" height="1" width="8" src="//www.ibm.com/i/c.gif"/></td>-->
<TD width="21">
	<!-- start Slashdot it link -->
	<A href="javascript:location.href='http://slashdot.org/bookmark.pl?url='+encodeURIComponent(location.href)+'&title='+encodeURIComponent(document.title)">
									<IMG src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/slashdot-favicon.gif" alt="Slashdot" border="0" height="16" width="16"></A></TD>
	<TD width="120"><A href="javascript:location.href='http://slashdot.org/bookmark.pl?url='+encodeURIComponent(location.href)+'&title='+encodeURIComponent(document.title)">Slashdot it!</A></TD>
<!--<td width="8"><img alt="" height="1" width="8" src="//www.ibm.com/i/c.gif"/></td>-->
<TD><IMG alt="" height="5" width="8" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD>
</TR>

</TBODY></TABLE><P>
</TD></TR></TBODY></TABLE>
<P><!--START RESERVED FOR FUTURE USE INCLUDE FILES--><!-- NO RESERVED CONTENT --><!--END RESERVED FOR FUTURE USE INCLUDE FILES--><BR><SPAN class="no-print"><TABLE cellspacing="0" cellpadding="0" align="right"><TBODY><TR align="right"><TD><TABLE border="0" cellpadding="0" cellspacing="0"><TBODY><TR><TD valign="middle"><IMG width="16" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/u_bold.gif" height="16" border="0" alt=""><BR></TD><TD valign="top" align="right"><A href="http://www.ibm.com/developerworks/java/library/j-jtp02244.html#main" class="fbox"><B>Back to top</B></A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><BR><BR></SPAN></TD><TD width="10"><IMG alt="" height="1" width="10" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/c.gif"></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><!--FOOTER_BEGIN--><DIV id="ibm-page-tools">
<!-- IBM page tools -->
<UL class="ibm-link-list"><LI class="ibm-first"><A href="javascript:void(0);" id="etplnk" class="ibm-email-link" onclick="displayFormLayer(event, 2);">E-mail this page</A></LI><LI><A href="javascript:print();" id="ptplnk" class="ibm-print-link">Print this page</A></LI><LI><A href="javascript:void(0);" onclick="ibmCommonDynamicNavBookmarkRun(&#39;http://digg.com/submit?phase=2&amp;&#39;, &#39;url&#39;, &#39;title&#39;);return false" id="ibmCommonDynamicNavDiggLink" hreflang="en" class="ibm-digg-link">Digg this</A></LI><LI><A href="javascript:void(0);" onclick="ibmCommonDynamicNavBookmarkRun(&#39;http://del.icio.us/post?&#39;, &#39;url&#39;, &#39;title&#39;);return false" id="ibmCommonDynamicNavDeliciousLink" hreflang="en" class="ibm-delicious-link">Save to del.icio.us</A></LI></UL></DIV>
<DIV id="ibm-footer">
<UL>
<LI class="ibm-first"><A href="http://www.ibm.com/ibm/us/en/">About IBM</A></LI>
<LI><A href="http://www.ibm.com/privacy/us/en/">Privacy</A></LI>
<LI><A href="http://www.ibm.com/contact/us/en/">Contact</A></LI>
<LI><A href="http://www.ibm.com/legal/us/en/">Terms of use</A></LI>
<LI><A href="http://www.ibm.com/ibm/syndication/us/en/?cm_re=footer-_-ibmfeeds-_-top_level">IBM Feeds</A></LI><A href="http://www.ibm.com/ibm/syndication/us/en/?cm_re=footer-_-ibmfeeds-_-top_level"></A></UL>
</DIV>

<DIV id="ibm-overlay-top"></DIV></DIV>

<SCRIPT type="text/javascript" language="JavaScript1.2" src="./Java theory and practice  Fixing the Java Memory Model, Part 1_files/stats.js"></SCRIPT>
<NOSCRIPT></NOSCRIPT><!--FOOTER_END--><!--XSLT stylesheet used to transform this file:  dw-document-html-5.10.xsl--></BODY></HTML>